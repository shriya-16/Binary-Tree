#include <iostream>
#include <queue>
using namespace std;

struct Node{
    int val;
    Node *left, *right;
};

struct Node* newNode(int data){
    struct Node* temp = new Node;
    temp->val = data;
    temp->left = temp->right = NULL;
    return temp;
}

bool isContinuous(struct Node* root){
    if(root == NULL)
        return true;
    queue<struct Node*> q;
    q.push(root);
    struct Node* temp;
    while(!q.empty()){
        temp = q.front();
        q.pop();
        if(temp->left != NULL){ 
            if(abs(temp->val - temp->left->val) != 1)
                return false;
            q.push(temp->left);
        }
        if(temp->right != NULL){ 
            if(abs(temp->val - temp->right->val) != 1)
                return false;
            q.push(temp->right);
        }
    }
    return true;
}

int main(){
    struct Node* root = newNode(3);
    root->left = newNode(2);
    root->right = newNode(4);
    root->left->left = newNode(1);
    root->left->right = newNode(3);
    root->right->left = newNode(5);
    if(isContinuous(root))
        cout << "Yes ";
    else
        cout << "No";
    return 0;
}
